# Quick Start (at fist stop ROS Master if working on host)
# Mapping:
# $ docker compose -f compose.rosbot.hardware.yaml -f compose.rosbot.mapping.yaml -f compose.rosbot.vpn.yaml up
# Or localization: 
# $ docker compose -f compose.rosbot.hardware.yaml -f compose.rosbot.localization.yaml -f compose.rosbot.vpn.yaml up

services:
  microros:
    network_mode: host
    ipc: host
    volumes:
      - ./dds-config.xml:/dds-config.xml
    environment:
      - FASTRTPS_DEFAULT_PROFILES_FILE=/dds-config.xml
      - ROS_DOMAIN_ID=${ROS_DOMAIN_ID:-0}
      - RMW_IMPLEMENTATION=${RMW_IMPLEMENTATION:-rmw_fastrtps_cpp}

  rplidar:
    network_mode: host
    ipc: host
    volumes:
      - ./dds-config.xml:/dds-config.xml
    environment:
      - FASTRTPS_DEFAULT_PROFILES_FILE=/dds-config.xml
      - ROS_DOMAIN_ID=${ROS_DOMAIN_ID:-0}
      - RMW_IMPLEMENTATION=${RMW_IMPLEMENTATION:-rmw_fastrtps_cpp}

  rosbot-xl:
    network_mode: host
    ipc: host
    volumes:
      - ./dds-config.xml:/dds-config.xml
    environment:
      - FASTRTPS_DEFAULT_PROFILES_FILE=/dds-config.xml
      - ROS_DOMAIN_ID=${ROS_DOMAIN_ID:-0}
      - RMW_IMPLEMENTATION=${RMW_IMPLEMENTATION:-rmw_fastrtps_cpp}

  navigation:
    network_mode: host
    ipc: host
    volumes:
      - ./dds-config.xml:/dds-config.xml
    environment:
      - FASTRTPS_DEFAULT_PROFILES_FILE=/dds-config.xml
      - ROS_DOMAIN_ID=${ROS_DOMAIN_ID:-0}
      - RMW_IMPLEMENTATION=${RMW_IMPLEMENTATION:-rmw_fastrtps_cpp}

  localization-mapping:
    network_mode: host
    ipc: host
    volumes:
      - ./dds-config.xml:/dds-config.xml
    environment:
      - FASTRTPS_DEFAULT_PROFILES_FILE=/dds-config.xml
      - ROS_DOMAIN_ID=${ROS_DOMAIN_ID:-0}
      - RMW_IMPLEMENTATION=${RMW_IMPLEMENTATION:-rmw_fastrtps_cpp}
