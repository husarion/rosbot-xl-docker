# Quick Star
# $ docker compose -f compose.rosbot.hardware.yaml up

services:
  microros:
    image: microros/micro-ros-agent:humble
    restart: unless-stopped
    command: udp4 --port 8888
    healthcheck:
      test: "if [ $$(. /opt/ros/$$ROS_DISTRO/setup.sh ; ros2 topic info /_motors_response | grep 'Publisher count: 1' | wc -l) -eq 0 ]; then exit 1; else exit 0; fi"
      interval: 1s
      timeout: 5s
      retries: 50

  rplidar:
    image: husarion/rplidar:humble
    restart: unless-stopped
    devices:
      - /dev/rplidar
    volumes:
      - ./config/sllidar_launch.py:/sllidar_launch.py
    command: ros2 launch /sllidar_launch.py serial_baudrate:=${RPLIDAR_BAUDRATE:-256000} serial_port:=/dev/rplidar scan_mode:=Standard
    healthcheck:
      test: "if [ $$(. /opt/ros/$$ROS_DISTRO/setup.sh ; ros2 topic info /scan | grep 'Publisher count: 1' | wc -l) -eq 0 ]; then exit 1; else exit 0; fi"
      interval: 1s
      timeout: 5s
      retries: 50

  rosbot-xl:
    image: husarion/rosbot-xl:humble
    build:
      context: ./../
      dockerfile: ./Dockerfile.hardware
    restart: unless-stopped
    command: ros2 launch rosbot_xl_bringup bringup.launch.py mecanum:=${MECANUM:-False}
    healthcheck:
      test: "if [ $$(. /opt/ros/$$ROS_DISTRO/setup.sh ; ros2 topic info /imu_broadcaster/imu | grep 'Publisher count: 1' | wc -l) -eq 0 ]; then exit 1; else exit 0; fi"
      interval: 1s
      timeout: 5s
      retries: 50
    depends_on:
      microros:
        condition: service_healthy
      rplidar:
        condition: service_healthy
