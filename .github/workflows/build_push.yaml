name: Build a Docker Image

on:
  push:
    paths-ignore:
      - 'README'
      - 'LICENSE'
      - 'demo/**'
    branches:
      - "main"
  repository_dispatch:
    types: [ros-package-update]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        include:
          # - dockerfile: Dockerfile.hardware
          #   docker_tag: humble
          # - dockerfile: Dockerfile.simulation
          #   docker_tag: humble-simulation
          - dockerfile: Dockerfile.manipulation.simulation
            docker_tag: humble-manipulation-simulation
          - dockerfile: Dockerfile.manipulation.hardware
            docker_tag: humble-manipulation

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: latest

      - name: Login to Docker Registry
        uses: docker/login-action@v1
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Set docker image tags
        env:
          MATRIX_DOCKER_TAG: ${{ matrix.docker_tag }}
          IMAGE_VERSION: ${{ github.event.client_payload.image_version }}
        run: |
          if [[ ${IMAGE_VERSION} != '' ]]; then
            echo "TAGS=husarion/rosbot-xl:${MATRIX_DOCKER_TAG},husarion/rosbot-xl:${MATRIX_DOCKER_TAG}-${IMAGE_VERSION}" >> $GITHUB_ENV
          else
            echo "TAGS=husarion/rosbot-xl:${MATRIX_DOCKER_TAG}" >> $GITHUB_ENV
          fi

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          platforms: linux/arm64, linux/amd64
          push: true
          tags: ${{ env.TAGS }}
          # cache-from: type=registry,ref=husarion/rosbot-xl:${{ matrix.docker_tag }}
          cache-to: type=inline
